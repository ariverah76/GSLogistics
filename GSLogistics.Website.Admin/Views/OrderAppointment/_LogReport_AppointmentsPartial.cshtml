
@using GSLogistics.Website.Admin.Models
@model List<Appointment>


<label id="filterInfo"></label>
<table class="table display-compact table-striped table-bordered" id="tableLogReport" style="width:100%">
    <thead>
        <tr>
            <th>
                Appt#
            </th>
            <th>
                CustID
            </th>
            <th>
                Ship To
            </th>
            <th>
                Div ID
            </th>
            <th>
                Division
            </th>
            <th>
                PO#
            </th>
            <th>
                Order#
            </th>
            <th>
                Pieces
            </th>
            <th>
                Boxes
            </th>
            <th>
                S. Date
            </th>
            <th>
                S. Time
            </th>
            <th>
                Scac
            </th>
            <th>
                Carrier
            </th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AppointmentNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShipTo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DivisionNameId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DivisionName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PurchaseOrder)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PickTicket)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Pieces)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BoxesNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShipDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShippingTimeFriendly)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ScaccCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Carrier)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BillOfLading)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.pathPOD)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExternalBol)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DriverName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Pallets)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeliveryTypeId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MasterBillOfLading)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AnyChildBolHasPOD)
                </td>



            </tr>
        }
    </tbody>
    
</table>


<script type="text/javascript">

    $(document).ready(function () {

       var table = $("#tableLogReport").DataTable({
            dom: 'lfTrtip',
            
            paging: false,
            order: [[13, "asc"], [0,"asc"]],
            columns: [
                {
                    data: 'AppointmentNo'
                }
                ,
                {
                    data: 'CustomerId'
                }
                ,
                {
                    data: 'ShipTo'
                }
                ,
                {
                    data: 'DivisionNameId'
                }
                ,
                {
                    data: 'DivisionName'
                }
                ,
                {
                    data: 'PurchaseOrder'
                }
                ,
                {
                    data: 'PickTicket'
                }
                ,

                {
                    data: 'Pieces'
                }
                ,
                {
                    data: 'BoxesNumber'
                }
                ,
                {
                    data: 'ShipDate'
                }
                ,
                {
                    data: 'ShipTime'
                }
                ,
                {
                    data: 'ScaccCode'
                }
                ,
                {
                    data: 'Carrier'
                }
                ,
                {
                    data: 'BillOfLading',
                    visible: false
                }
                ,
                {
                    data: 'pathPOD',
                    visible: false
                }
                ,
                {
                    data: 'ExternalBol',
                    visible: false
                }
                ,
                {
                    data: 'DriverName',
                    visible: false
                }
                ,
                {
                    data: 'Pallets',
                    visible: false
                }
                ,
                {
                    data: 'DeliveryTypeId',
                    visible: false

                }
                ,
                {
                    data: 'MasterBillOfLading',
                    visible: false
                }
                ,
                {
                    data: 'AnyChildBolHasPOD',
                    visible: false
                }
            ]
            ,
            "drawCallback": function (settings) {
                var api = this.api();
                
                var rows = api.rows({ page: 'current' }).nodes();
                var allRows = api.rows({ page: 'current' }).nodes();
                var columna = api.row(0).data.length;
                
                var last = null;
                var lastSub = null;
                var mySubGroup = null;
               // var total = new Array();
                // total['Total']
                var groupid = -1;
                var subtotal = new Array();

                //$(rows).each(function () {
                //    console.log(this.cells);
                //    groupName = this.cells[13].innerHTML;
                //    mySubGroup = this.cells[0].innerHTML;

                   

                //    if (last !== groupName) {
                //        $(this).before('<tr class="group"><td colspan="14">' + groupName + '</td></tr>');
                //        last = groupName;
                //    }
                //    if (lastSub !== mySubGroup) {
                //        $(this).before('<tr class="subgroup"><td colspan="14">' + mySubGroup + '</td></tr>');
                //        lastSub = mySubGroup;
                //    }
                //});

                api.column(13, { page: 'current' }).data().each(function (group, i) {
                    if (last !== group) {
                        groupid++;
                        var groupDisplay = group;

                        val = api.row(api.row($(rows).eq(i)).index()).data();
                        var bol = val['AppointmentNo'];
                        if (group.search("BOL") > -1) {
                            groupDisplay = "";
                        }

                        if (typeof subtotal[groupid] == 'undefined') {
                            subtotal[groupid] = new Array();
                        }

                        var textHeader = '<tr class="group"><td colspan=1>{button}</td><td colspan=6>BOL: ' + groupDisplay + ' Appointment #: </td></tr>';
                        var textButton = '<button class="btn btn-info" type="button" data-toggle="tooltip" title="Re-Schedule" onclick="reschedule(\'' + group + '\',\'' + bol + '\')" id=btnresch_' + group + '><i class="fa fa-calendar-plus-o"/></button> '

                        if (val['DeliveryTypeId'] == 2) {
                            //textHeader = textHeader.replace("{DriverName}", " | Driver: " + val['DriverName']);
                            //textHeader = textHeader.replace("{Pallets}", " | Pallets: " + val['Pallets']);

                            if (typeof subtotal[groupid]["Driver"] == 'undefined') {
                                subtotal[groupid]["Driver"] = "";
                            }
                            subtotal[groupid]["Driver"] = val['DriverName'];
                            if (typeof subtotal[groupid]["Pallets"] == 'undefined') {
                                subtotal[groupid]["Pallets"] = 0;
                            }
                            subtotal[groupid]["Pallets"] = val['Pallets'];
                           
                        }
                        else {
                            //textHeader = textHeader.replace("| {DriverName}", "");
                            //textHeader = textHeader.replace("| {Pallets}", "");
                            if (typeof subtotal[groupid]["Driver"] == 'undefined') {
                                subtotal[groupid]["Driver"] = "";
                            }

                           

                        }
                        if (val['pathPOD'].length == 0) {
                            
                            textHeader = textHeader.replace("{button}", textButton);
                            //$(rows).eq(i).before(
                            // textHeader
                            //);
                            //'<tr class="group"><td colspan=1><button class="btn btn-info" type="button" data-toggle="tooltip" title="Re-Schedule" onclick="reschedule(\'' + group + '\',\'' + bol + '\')" id=btnresch_' + group + '><i class="fa fa-calendar-plus-o"/></button> </td><td colspan=6> Appointment #: ' + bol + ' - BOL: ' + group + '</td></tr>'
                        }
                        else {
                           // var header = '<tr class="group"><td colspan=1><button class="btn btn-danger" type="button" data-toggle="tooltip" title="See POD" onclick="donwloadPOD(\'' + group + '\')" id=btn_' + group + '><i class="fa fa-file-pdf-o"/></button> </td><td colspan=6> Appointment #: ' + bol + ' - BOL: ' + group + '</td></tr>'
                            var extcol = val['ExternalBol'];
                            var childPOD = val['AnyChildBolHasPOD'];
                            textButton = '<button class="btn btn-warning" type="button" data-toggle="tooltip" title="See POD" onclick="donwloadPOD(\'' + group + '\')" id=btn_' + group + '><i class="fa fa-file-pdf-o"/></button> ';
                            if (extcol.search("checked") > 0 ) {
                                
                                textButton = textButton.replace("btn btn-danger", "btn btn-warning");
                                textButton = textButton.replace("See POD", "See External POD");
                                textButton = textButton.replace("</button>", 'E</button>');
                                textButton = textButton.replace("fa fa-file-pdf-o", "fa fa-file-pdf-o pull-left");
                            }
                            if (val['MasterBillOfLading'] !== "" && childPOD.search("checked") > 0) {
                                textButton = textButton.replace("downloadPOD", "downloadMasterBOL");
                            }

                            textHeader = textHeader.replace("{button}", textButton);
                            
                        }
                        if (val['MasterBillOfLading'] !== "") {
                            textHeader = textHeader.replace("group", "group groupmaster")
                            
                        }

                        $(rows).eq(i).before(textHeader);
                          
                       
                       

                        last = group;
                    }
                    val = api.row(api.row($(rows).eq(i)).index()).data();      //current order index
                    $.each(val, function (index2, val2) {
                        if (index2 == "Pieces" || index2 == "BoxesNumber" || index2 == "Pallets") {
                            if (typeof subtotal[groupid] == 'undefined') {
                                subtotal[groupid] = new Array();
                            }
                            if (typeof subtotal[groupid][index2] == 'undefined') {
                                subtotal[groupid][index2] = 0;
                            }
                            valore = Number(val2.replace('€', "").replace('.', "").replace(',', "."));
                            subtotal[groupid][index2] += valore;
                        }
                        if (index2 == "AppointmentNo") {
                            if (typeof subtotal[groupid] == 'undefined') {
                                subtotal[groupid] = new Array();
                            }
                            if (typeof subtotal[groupid][index2] == 'undefined') {
                                subtotal[groupid][index2] = "";
                            }
                            if (subtotal[groupid][index2].search(val2) == -1) {
                                subtotal[groupid][index2] += val2 + " "
                            }

                        }
                        if (index2 == "pathPOD") {
                            if (typeof subtotal[groupid][index2] == 'undefined') {
                                subtotal[groupid][index2] = "";
                            }
                            if (subtotal[groupid][index2].search(val2) == -1) {
                                subtotal[groupid][index2] += val2 + ","
                            }
                        }
                        
                    });

                });

                $('tbody').find('.group').each(function (i, v) {
                    console.log(subtotal);
                    var rowCount = $(this).nextUntil('.group').length;
                    //If we need to check all the orders has a pathPOD this is where we can inject the button instead 
                    //Check if all the bols has a valid path
                    if (subtotal[groupid]["pathPOD"].length > 0) {
                        $(this).find('td button').removeClass("btn warning")
                    }

                    $(this).find('td:nth-child(2)').append('<span>' + subtotal[i]["AppointmentNo"] + ' </span>');

                    var totalWord = 'Total';
                    if ($(this).hasClass("groupmaster")) {
                        totalWord += ' BOL\'s ';

                    }
                    else {
                        totalWord += ' Orders ';
                    }


                    $(this).find('td:nth-child(2)').append($('<span />', { 'class': 'rowCount-grid' }).append($('<b />', { 'text': ' ('+ totalWord + rowCount+')' })));
                    var subtd = '';
              
                    subtd += '<td> <span><strong> ' + subtotal[i]["Pieces"] + '</strong></span></td>';
                    subtd += '<td><span><strong>' + subtotal[i]["BoxesNumber"] + '</strong></span></td>';
                    if (subtotal[i]["Pallets"] > 0) {
                        subtd += '<td colspan=2><span> Pallets: ' + subtotal[i]["Pallets"] + '</span></td>';
                    }
                    else {
                        subtd += '<td colspan=2></td>';
                    }
                    if (subtotal[i]["Driver"] !== "") {
                        subtd += '<td colspan=2><span> Driver: ' + subtotal[i]["Driver"] + '</span></td>';
                    }
                    else {
                        subtd += '<td colspan=2></td>';
                    }

                    $(this).append(subtd);

                });
						
            
            },
            
       });
       var timer;

        table.on('search.dt', function () {
            //$('#filterInfo').html('Currently applied global search: ' + table.search());
            if (table.page.info().recordsDisplay == 0) {
                clearTimeout(timer);
                timer = setTimeout(function () {
                    $('#SelectedPickTicket').val(table.search());
                    $('#btnRefresh').trigger("click");
                },3000)
            }
        });

    
    });

    
</script>