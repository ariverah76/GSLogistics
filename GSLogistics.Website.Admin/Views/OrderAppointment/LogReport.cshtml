@using GSLogistics.Website.Admin.Models
@using GSLogistics.Website.Common

@model LogReportIndex_ViewModel

@{
    ViewBag.Title = "Log Report";
    AjaxOptions ajaxOptions = new AjaxOptions { UpdateTargetId = "panelBody", LoadingElementId = "pnlGrid" };

}

@{
    var customers = this.ViewBag.Customers as SelectList;
    var divisions = this.ViewBag.Divisions as SelectList;
}

<style type="text/css">
    div.container {
        width: 80%;
    }
     
    .blocking {
        display: none;
        position: fixed;
        z-index: 1000;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background : rgba(255,255,255,.8)
                    url("/8.gif")
                    50% 50%
                    no-repeat;
    
    }
    body.loading {
        overflow: hidden;
    }

    body.loading .blocking {
        display: block;
    }
</style>

<div class="panel panel-title">
    <h2>Log Report</h2>
</div>

<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">

        </div>
        @using (Ajax.BeginForm("GetLogReport", ajaxOptions))
        {
            <div class="btn-group btn-group-justified">
                @if (!User.IsInRole("Clients"))
                {
                    @Html.ActionLink("Back to Orders", "List", "OrderAppointment", new { @class = "btn btn-info" })
                }
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Download Report
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu">
                        @*<li>@Ajax.ActionLink("Pdf","DownloadLogReport", "OrderAppointment", new {selectedDay = Model.SelectedDay, customerId = Model.SelectedClientId, divisionId = Model.SelectedDivisionId, deliveryTypeId = Model.DeliveryTypeId, format = "pdf" }, new AjaxOptions { HttpMethod = "POST"}, new { @class = "dropdown-item"  })</li>*@
                        @*<li>@Html.ActionLink("Excel", "TestDownload", "OrderAppointment", new { @class = "dropdown-item", @id = "reportExcel" })</li>*@
                        <li><a href="#" class="dropdown-item" id="btnPdf">PDF</a></li>
                        <li><a href="#" class="dropdown-item" id="btnExcel">Excel</a></li>

                    </ul>
                </div>
                @if (!User.IsInRole("Clients"))
                {
                    @Html.ActionLink("Orders Re-Scheduled ", "Reschedule", "OrderAppointment", new { @class = "btn btn-info" })
                }
                <a href="#" class="btn btn-info" id="btnRefresh">Refresh</a>
            </div>
            <div class="panel panel-default">
                 <div class="panel-heading">Search</div>
                <div class="panel-body">

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SelectedDay)
                                @Html.DatePicker(x => x.SelectedDay)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SelectedPickTicket)
                                @Html.TextBoxFor(x => x.SelectedPickTicket)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SelectedClientId)
                                @Html.DropDownListFor(m => m.SelectedClientId, customers, "Select", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SelectedDivisionId)
                            @Html.DropDownListFor(m => m.SelectedDivisionId, divisions, "Select", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.DeliveryTypeId)
                                <div class="radio-inline">
                                    @Html.RadioButtonFor(m => m.DeliveryTypeId, 1, new { id = "IsPickup" })
                                    <span style="padding-right:20px">Pickup</span>
                                    @Html.RadioButtonFor(m => m.DeliveryTypeId, 2, new { id = "IsDelivery" })
                                    <span>Delivery</span>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            }
        <div class="panel-body" id="panelBody">
            <div id="pnlGrid" class="load" style="display:none">
                <p>Loading Data...</p>
            </div>
            @Html.Action("GetLogReport", Model)
        </div>
     </div>
</div>
<div class="blocking"></div>
@Scripts.Render("~/bundles/datetimepicker")
@Scripts.Render("~/bundles/dataTables")
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/DataTables/dataTables.select.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {

        $(document).ajaxStop(function () {
            $body = $("body");
            console.log('ajax stop');
            $body.removeClass("loading");

        });

        $(document).ajaxStart(function () {
            $body = $("body");
            console.log('ajax started');
            $body.addClass("loading")
        });


        $("#SelectedClientId").select2();
        $("#SelectedDivisionId").select2();

        $("#btnRefresh").click(function () {
            $(this).closest("form").submit();
        });

        @*$('.dropdown-item').click(function () {
            $(this).closest('form').attr(
                "action", "@Url.Action("TestDownload","OrderAppointment")"
                ).submit();
        });*@


        $("#btnExcel").click(function () {
            //var model = {
            //    SelectedClientId: $("#SelectedClientId").val(),
            //    SelectedDivisionId: $("#SelectedDivisionId").val(),
            //    SelectedDay: $("#SelectedDay").val(),
            //    DeliveryTypeId: $('input[name = DeliveryTypeId]:checked').val(),
            //    ReportFormat: "excel"
            //};
            var model = getDataForReport();
            model.ReportFormat = "excel";

            postReport(model);


        });


        $("#btnPdf").click(function () {
            var model = getDataForReport();
            model.ReportFormat = "pdf";

            postReport(model);


        });


        function getDataForReport() {
            var model = {
                SelectedClientId: $("#SelectedClientId").val(),
                SelectedDivisionId: $("#SelectedDivisionId").val(),
                SelectedDay: $("#SelectedDay").val(),
                DeliveryTypeId: $('input[name = DeliveryTypeId]:checked').val(),

            };

            return model;
        }

        function postReport(model) {
            toastr.info("Downloading Report...");
            $.ajax({
                type: "POST",
                url: '@Url.Action("GenerateLogReport", "OrderAppointment")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(model),
                dataType: "json",

            }).done(function (returnValue) {
                if (returnValue.success) {
                    window.location.href = "/OrderAppointment/DownloadReport?reportName=" + returnValue.fName + "&format=" + returnValue.mimeType + "&fileExtension=" + returnValue.ReportFormat;
                    toastr.success("Report downloaded!");
                }
            }).fail(function () {
                toastr.error("Error downloading the report");
            });
        }

        

        

        $("#SelectedClientId").change(function () {
            var selectedItem = $(this).val();
            var ddDivisions = $("#SelectedDivisionId");
            $.ajax({
                cache: false,
                type: 'GET',
                url: '@Url.Action("GetDivisionByClient","OrderAppointment")',
                data: {"customerId": selectedItem },
                success: function (data) {
                    ddDivisions.html('');
                    $.each(data, function (id, option) {
                        ddDivisions.append($('<option></option>').val(option.Id).html(option.Name));

                    });
                    $("#btnRefresh").trigger('click');


                }
                ,  error: function (xhr, ajaxOptions, thrownError) {
                    toastr.Error('Failed to get Divisions');
                }
            });


        });


        
        $("#SelectedDivisionId").change(function () {
            $("#btnRefresh").trigger('click');
        });



    });

    function donwloadPOD(bol) {
        toastr.info("Downloading Document..." + bol);
        $.ajax({
            type: "POST",
            url: '@Url.Action("RenderPOD", "OrderAppointment")',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ "data": bol }),
            dataType: "text",

        }).done(function (returnValue) {
            console.log(returnValue);
            var obj = JSON.parse(returnValue);
            if (obj.success == true) {
                window.location.href = "/OrderAppointment/DownloadReport?reportName=" + obj.fileName + "&format=" + obj.mimeType + "&fileExtension=" + obj.format
                toastr.success("Document downloaded!");
            }
            else {
                toastr.error("There was an error processing your request. Try later.");
            }
        }).fail(function () {
            toastr.error("Error downloading the document");
        });

    }

    function reschedule(bol, apptnumber) {

        if (confirm("Are you really sure to re-schedule this Bill of Lading?")) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("RescheduleBol", "OrderAppointment")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify( {"bol": bol, "appointmentnumber": apptnumber  }),
                dataType: "json",

            }).done(function (returnValue) {
                if (returnValue.result.length == 0) {
                    toastr.success("Re-Schedule succesful!");
                    $("#btnRefresh").trigger('click');
                }
                else {
                    toastr.error("Error trying to set re-schedule: " +  returnValue.result);
                }
            }).fail(function () {
                toastr.error("Error trying to set re-schedule");
            });
        }

    }


</script>

@Styles.Render("~/Content/datetimepicker")
   