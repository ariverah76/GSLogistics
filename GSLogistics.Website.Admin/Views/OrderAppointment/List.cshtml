
@using GSLogistics.Website.Admin.Models
@using GSLogistics.Website.Common

@model  OrderAppointmentsIndex_ViewModel


@{
    ViewBag.Title = "List";
    AjaxOptions ajaxOptions = new AjaxOptions { UpdateTargetId = "panelBody", LoadingElementId = "loading", LoadingElementDuration = 1000  };

}
@{
    var customers = this.ViewBag.Customers as SelectList;
    var scacCodes = this.ViewBag.ScacCodes as SelectList;
    var appointmentStatus = this.ViewBag.AppointmentStatus as SelectList;
}

<div class="panel panel-default">
    <div class="panel-heading">
        <div class="row">
            <ul class="nav nav-pills nav-justified">
                <li class="active" role="presentation"><a data-toggle="pill" href="#orders">Orders</a></li>
                <li role="presentation"><a data-toggle="pill" href="#appointments">Appointments</a></li>
            </ul>
        </div>
    </div>
</div>
<div class="tab-content">
    <div id="orders" class="tab-pane fade in active">
        
        <h2>Orders</h2>
        @using (Html.BeginForm())
        {
            <div class="row">
                <div class="btn-group btn-group-justified">
                    <a href="#" class="btn btn-info" onclick="setAppointment()">Set Appointment</a>
                    <a href="#" class="btn btn-info" onclick="showConfirmationNumberModal()">Set Confirmation #</a>
                    <a href="#" class="btn btn-info" id="btnRefresh">Refresh</a>

                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">Search</div>
                    <div class="panel-body">
                        @if (customers.Count() > 0)
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SelectedClientId)
                                        @Html.DropDownListFor(m => m.SelectedClientId, customers, "Select", new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CancelDateStartDate)
                                    @Html.DatePicker(x => x.CancelDateStartDate, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CancelDateEndDate)
                                    @Html.DatePicker(x => x.CancelDateEndDate, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="row">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Orders for Appointment
                </div>

                <div class="panel-body">
                    <table class="table display-compact table-bordered table-striped" id="tableAppointments">
                        <thead>
                            <tr>
                                <th class="text-center">

                                </th>
                                <th>
                                    @*@Html.DisplayNameFor(model => model.StoreName)*@
                                    Ship To
                                </th>
                                <th>
                                    Start Date
                                </th>
                                <th>Cancel Date</th>
                                <th>
                                    PO#
                                    @*@Html.DisplayNameFor(model => model.PurchaseOrderId)*@
                                </th>
                                <th>
                                    PT#
                                    @*@Html.DisplayNameFor(model => model.PickTicketId)*@
                                </th>
                                <th>
                                    Pcs
                                    @*@Html.DisplayNameFor(model => model.Pieces)*@
                                </th>
                                <th>
                                    Lbs@*@Html.DisplayNameFor(model => model.Weight)*@
                                </th>
                                <th>
                                    Ctns.
                                    @*@Html.DisplayNameFor(model => model.BoxesNumber)*@
                                </th>
                                <th>
                                    Cubic
                                    @*@Html.DisplayNameFor(model => model.Volume)*@
                                </th>
                                <th>
                                    Ctn Size
                                    @*@Html.DisplayNameFor(model => model.BoxSize)*@
                                </th>
                                <th>
                                    Create Dt
                                    @*@Html.DisplayNameFor(model => model.EstimatedShippingDate)*@
                                </th>
                                <th style="visibility:hidden"></th>
                                <th style="visibility:hidden"></th>
                                <th style="visibility:hidden"></th>
                                <th>Notes</th>
                                <th>Conf. #</th>
                                <th style="visibility:hidden"></th>

                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th>PO#</th>
                                <th>PT#</th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th style="visibility:hidden"></th>
                                <th style="visibility:hidden"></th>
                                <th style="visibility:hidden"></th>
                                <th></th>
                                <th></th>
                                <th style="visibility:hidden"></th>
                            </tr>
                        </tfoot>
                        <tbody>
                            @foreach (var item in Model.OrderAppointments)
            {
                                <tr class="info">
                                    <td></td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.StoreName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.StartDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.EndDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PurchaseOrderId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PickTicketId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Pieces)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Weight)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BoxesNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Volume)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BoxSize)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.EstimatedShippingDate)
                                    </td>
                                    <td style="visibility:hidden">
                                        @Html.DisplayFor(modelItem => item.PtBulk)
                                    </td>
                                    <td style="visibility:hidden">
                                        @Html.DisplayFor(modelItem => item.CustomerId)
                                    </td>
                                    <td style="visibility:hidden">
                                        @Html.DisplayFor(modelItem => item.DivisionName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Notes)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ConfirmationNumber)
                                    </td>
                                    <td style="visibility:hidden">
                                        @Html.DisplayFor(modelItem => item.DivisionId)
                                    </td>

                                </tr>
                            }
                        </tbody>

                    </table>
                </div>
            </div>

        </div>
    </div> 
    <div id="appointments" class="tab-pane fade">
        <h2>Appointments</h2>
        <div class="row">
            <div class="panel panel-default">
                <div class="panel-heading">
                </div>
                @using (Ajax.BeginForm("GetAppointments", ajaxOptions))
                {

                        <div class="btn-group btn-group-justified">
                            <a href="#" class="btn btn-info" onclick="postAppointment()">Post Appointments</a>
                            <a href="#" class="btn btn-info" onclick="deleteAppointment()">Cancel Appointments</a>
                            <a href="#" class="btn btn-info" onclick="editAppointment()">Edit Appointments</a>
                            <a href="#" class="btn btn-info" id="btnRefreshAppt">Refresh</a>

                        </div>
                        <div class="panel panel-default">
                            <div class="panel-heading">Search</div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.SelectedStatus)
                                            @Html.DropDownListFor(x => x.SelectedStatus, appointmentStatus, "Select", new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AppointmentNumberSearch)
                                            @Html.TextBoxFor(x => x.AppointmentNumberSearch, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ShippingDateStart)
                                            @Html.DatePicker(x => x.ShippingDateStart, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ShippingDateEnd)
                                            @Html.DatePicker(x => x.ShippingDateEnd, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                }
                <div class="panel-body" id="panelBody">
                    <div id="loading" class="load" style="display:none">
                        <p>Loading Data...</p>
                    </div>

                    @*@{ Html.RenderPartial("_AppointmentList", Model.Appointments); }*@
                    @Html.Action("GetAppointments", Model)
                </div>
            </div>
        </div>

    </div>
</div>

    <div class="modal fade" id="setConfirmationNumberModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dissmiss="modal" aria-hidden="true"></button>
                    <h3 class="modal-title">Set Confirmation Number</h3>
                    <h4 class="pull-right"><span id="totalOrdersSelectedLabel"></span></h4>
                </div>
                <div class="modal-body">
                    <form role="form" class="validate">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ConfirmationNumber)
                                    @Html.TextBoxFor(m => m.ConfirmationNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ConfirmationNumber)
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-white" data-dismiss="modal">Close</button>
                <button type="button" id="btnSaveConfNumber" onclick="setNewConfirmationNumber()" class="btn btn-info">Save</button>
            </div>
        </div>
      </div>
    </div>

    <div class="modal fade" id="setAppointmentModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dissmiss="modal" aria-hidden="true"></button>
                    <h3 class="modal-title">Set appointment</h3>
                    <h4 class="pull-right"><span id="totalOrdersLabel"></span></h4>
                </div>
                <div class="modal-body">
                    <form role="form" class="validate">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.AppointmentNumber)
                                    @Html.TextBoxFor(m => m.AppointmentNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.AppointmentNumber)
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ShippingDate)
                                    @Html.DatePicker(m => m.ShippingDate, new { @class = "form-control"} )
                                    @Html.ValidationMessageFor(m => m.ShippingDate)
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ShippingTime)
                                    @Html.DateTimePicker(model => model.ShippingTime, null, jsFormat: "hh:ii p", cFormat: "LT", todayHighlight:false, minView: DateTimePickerView.Hour, startView: DateTimePickerView.Day)
                                    @Html.ValidationMessageFor(m => m.ShippingTime)
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ShippingCompanyId)
                                    @Html.DropDownListFor(m => m.ShippingCompanyId, scacCodes, "Select", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ShippingCompanyId)
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white" data-dismiss="modal">Close</button>
                    <button type="button" id="btnSave" onclick="setNewAppointment()" class="btn btn-info">Set Appointment</button>
                </div>
            </div>
        </div>
    </div>


@Scripts.Render("~/bundles/datetimepicker")
@Scripts.Render("~/bundles/dataTables")
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/DataTables/dataTables.select.min.js"></script>

<script type="text/javascript">
    
    var editor;
    $(document).ready(function () {
        $("#ShippingCompanyId").select2();

        $(".select2-container").width(200);

        $("#tableAppointments").DataTable({
            dom: 'Bfrtip',
            responsive: true,
                columnDefs: [{
                    orderable: false,
                    className: 'select-checkbox',
                    targets: 0
                }],
                columns: [
                    {
                       
                    },
                    {
                        data: 'StoreName'
                    }
                    ,
                    {

                    }
                    ,
                    {

                    }
                    ,
                    {
                        data: 'PurchaseOrderId'
                    }
                    ,
                    {
                        data: 'PickTicketId'
                    }
                    ,
                    {

                    }
                    ,
                    {

                    }
                    ,
                    {

                    }
                    ,
                    {

                    }
                    ,
                    {

                    }
                    ,
                    {

                    }
                    ,
                    {
                        visible: false
                    }
                    ,
                    {
                        visible: false
                    }
                    ,
                    {
                        visible: false
                    }
                    ,
                    {
                        data: 'Notes', className: 'editable'
                    }
                    ,
                    {
                        data: 'ConfirmationNumber'
                    }
                    , 
                    {
                        data: 'DivisionId', visible :false
                    }



                ]
                ,
                select: {
                    style: 'multi',
                },
                "drawCallback": function (settings) {
                    var api = this.api();
                    var rows = api.rows({ page: 'current' }).nodes();
                    var last = null;

                    api.column(14, { page: 'current' }).data().each(function (group, i) {
                        if (last !== group) {
                            $(rows).eq(i).before(
                                '<tr class="group"><td colspan="15">' + group + '</td></tr>'
                            );

                            last = group;
                        }
                    });
                },
                "createdRow": function (row, data, dataIndex) {
                    if (data['ConfirmationNumber'].length > 0) {
                        $(row).css("background-color", "#EBE566");
                    }
                }

            });

            $('#tableAppointments tfoot th').each(function () {
                
                var title = $(this).text();
                if (title == "PO#" || title == "PT#") {


                    $(this).html('<input type="text" style="width:80px" placeholder="Search ' + title + '" />');
                }
            });
            $('#tableAppointments tbody').on('click', 'tr.group', function () {
                var currentOrder = table.order()[0];
                if (currentOrder[0] === 2 && currentOrder[1] === 'asc') {
                    table.order([14, 'desc']).draw();
                }
                else {
                    table.order([14, 'asc']).draw();
                }
            });


            // DataTable
            var table = $("#tableAppointments").DataTable();

            // Apply the search
            table.columns().every(function () {
                var that = this;

                $('input', this.footer()).on('keyup change', function () {
                    if (that.search() !== this.value) {
                        that
                            .search(this.value)
                            .draw();
                    }
                });
            });
             
            function myCallbackFunction(updatedCell, updatedRow, oldValue) {
                console.log("The new value for the cell is: " + updatedCell.data());
                console.log("The values for each cell in that row are: " + updatedRow.data());

                

                var model = {
                    PurchaseOrderId: updatedRow.data()["PurchaseOrderId"],
                    PickTicketId: updatedRow.data()["PickTicketId"],
                    PtBulk: updatedRow.data()[12],
                    CustomerId: updatedRow.data()[13],
                    Notes: updatedCell.data()
                };

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdateOrderAppointment", "OrderAppointment")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(model),
                    dataType: "json",
                    success: function (result) {
                        alert('Notes updated');
                        //window.location.href = result.url;
                    }
                });

            }

            table.MakeCellsEditable({
                "onUpdate": myCallbackFunction,
                "columns": [15],
                "confirmationButton" : true,
                "inputTypes": [
                    {
                        "column":0, 
                        "type":"text", 
                        "options":null 
                    }]

            });

            $('.datetimepicker-minutes .switch').attr('style', 'visibility:hidden;');
            $('.datetimepicker-hours .switch').attr('style', 'visibility:hidden;');


            $("#btnRefresh").click(function () {
                $(this).closest("form").submit();
            });
            $("#btnRefreshAppt").click(function () {
                $(this).closest("form").submit();
                $("#appointments").tab('show');

            });
            
    });

    function editAppointment() {
        var table = $("#tableappt").DataTable();
        var selected = table.rows('.selected').data();
        if (selected.length == 0) {
            alert("Please select at least an Order");
            return false;
        }
        var appts = new Array();



        for (var i = 0; i < selected.length; i++) {
            appts.push(selected[i]["AppointmentNo"]);
           
        }

        var allSameAppointmentNumber = appts.allValuesSame();

        if (allSameAppointmentNumber == false){
            alert("Please ensure all the Appointments are grouped on the same appointment number");
        }
        else {
            $('#setAppointmentModal').modal({
                show: true,
                backdrop: "static"
            });
            $("#AppointmentNumber").val(selected[0]["AppointmentNo"]);
            $("#ShippingDate").val(selected[0]["ShipDate"]);
            $("#ShippingTime").val(selected[0]["ShipTime"]);
            $("#ShippingCompanyId").val(selected[0]["ScaccCode"]);

            $('#btnSave').html("Save");
            $('#btnSave').attr('onclick', 'saveEditedAppointments()')
            $('#setAppointmentModal form').validate();
        }


    }
    
    function saveEditedAppointments() {
        var table = $("#tableappt").DataTable();
        if ($('#setAppointmentModal form').valid()) {
            var selected  = table.rows('.selected').data();
            var orders = new Array();

            for (var i = 0; i < selected.length; i++) {

                var orderWithAppointment = {
                    PurchaseOrderId: selected[i]["PurchaseOrder"],
                    PickTicketId: selected[i]["PickTicket"],
                    CustomerId: selected[i]["CustomerId"],
                    DateAdded: selected[i]["DateAdded"]
                };
                orders.push(orderWithAppointment);
            }

            var model = {};
            model.AppointmentNumber = $("#AppointmentNumber").val();
            model.Shippingdate = $("#ShippingDate").val();
            model.ShippingTime = $("#ShippingTime").val();
            model.ScacCode = $("#ShippingCompanyId").val();
            model.Orders = orders;

            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveEditedAppointment", "OrderAppointment")',
                contentType: "application/json; charset=utf-8",
                data:  JSON.stringify(model),
                dataType: "json",
                success: function (result) {
                    alert('Appointment set successfully');
                    $("#btnRefreshAppt").trigger("click");
                    //window.location.href = "GetAppointments";
                }
            });
            $('#setAppointmentModal').modal("hide");
        }
    }

    Array.prototype.allValuesSame = function () {
        for (var i = 1; i < this.length; i++) {
            if (this[i] !== this[0])
                return false;
        }

        return true;
    };

    function showConfirmationNumberModal() {
        var table = $("#tableAppointments").DataTable();
        var selected = table.rows('.selected').data();
        if (selected.length == 0) {
            alert("Please select at least an Order");
            return false;
        }
        $('#totalOrdersSelectedLabel').html(function (n, c) {
            return selected.length + ' selected order(s)'
        });
        $('#setConfirmationNumberModal').modal({
            show: true,
            backdrop: "static"
        });

        $('#setConfirmationNumberModal form').validate();
    }

    function setNewConfirmationNumber() {
        var table = $("#tableAppointments").DataTable();
        if ($('#setConfirmationNumberModal form').valid()) {

            var selected = table.rows('.selected').data();

            var orders = new Array();
            for (var i = 0; i < selected.length; i++) {

                var orderForAppointment = {
                    PurchaseOrderId: selected[i]["PurchaseOrderId"],
                    PickTicketId: selected[i]["PickTicketId"],
                    PtBulk: selected[i][12],
                    CustomerId: selected[i][13]
                };
                orders.push(orderForAppointment);

            }
            var model = {};
            model.ConfirmationNumber = $("#ConfirmationNumber").val();
            model.Orders = orders;

            $.ajax({
                type: "POST",
                url: '@Url.Action("SetConfirmationNumber", "OrderAppointment")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(model),
                dataType: "json",
                success: function (result) {
                    alert('Confirmation Number set successfully');
                    $("#btnRefresh").trigger("click");
                   // window.location.href = "List";
                }
            });
            $('#setAppointmentModal').modal("hide");
        }
    }

    function setAppointment() {
        var table = $("#tableAppointments").DataTable();
        var selected = table.rows('.selected').data();
        if (selected.length == 0) {
            alert("Please select at least an Order");
            return false;
        }
        $('#totalOrdersLabel').html(function(n, c) { 
            return selected.length + ' order(s) to assign'
        });

            $('#setAppointmentModal').modal({
                show: true,
                backdrop: "static"
            });

            $('#setAppointmentModal form').validate();

     }

        function setNewAppointment() {
            var table = $("#tableAppointments").DataTable();
            if ($('#setAppointmentModal form').valid()) {

                var selected  = table.rows('.selected').data();

                var orders = new Array();



                for (var i = 0; i < selected.length; i++) {

                    var orderForAppointment = {
                        PurchaseOrderId: selected[i]["PurchaseOrderId"],
                        PickTicketId: selected[i]["PickTicketId"],
                        PtBulk: selected[i][12],
                        CustomerId: selected[i][13],
                        DivisionId: selected[i]["DivisionId"]
                    };
                    orders.push(orderForAppointment);
                }

                var model = {};
                model.AppointmentNumber = $("#AppointmentNumber").val();
                model.Shippingdate = $("#ShippingDate").val();
                model.ShippingTime = $("#ShippingTime").val();
                model.ScacCode = $("#ShippingCompanyId").val();
                model.Orders = orders;

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SetAppointment", "OrderAppointment")',
                    contentType: "application/json; charset=utf-8",
                    data:  JSON.stringify(model),
                    dataType: "json",
                    success: function (result) {
                        alert('Appointment set successfully');
                        $("#btnRefresh").trigger("click");
                        //window.location.href = "List";
                    }
                });
                $('#setAppointmentModal').modal("hide");
            }
        }

        function postAppointment() {
            var table = $("#tableappt").DataTable();
            var selected = table.rows('.selected').data();
            if (selected.length == 0) {
                alert("Please select at least one Appointment");
                return false;
            }

            if (confirm('Are you sure you want to post these ' + selected.length + ' selected appointments ?')) {
                var selected = table.rows('.selected').data();

                var appointments = new Array();



                for (var i = 0; i < selected.length; i++) {

                    var appointment = {
                        CustomerId: selected[i]["CustomerId"],
                        PickTicket: selected[i]["PickTicket"],
                        AppointmentNo: selected[i]["AppointmentNo"],
                        Posted: true
                    };
                    appointments.push(appointment);
                }

                var model = {};
                model.Action = 1;
                model.Appointments = appointments;

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ActionAppointments", "OrderAppointment")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(model),
                    dataType: "json",
                    success: function (result) {
                        alert('Appointment(s) posted successfully');
                        table.rows('.selected').remove().draw(false);
                    }

                });

            }
           
        }

    function deleteAppointment() {
        var table = $("#tableappt").DataTable();
        var selected = table.rows('.selected').data();
        if (selected.length == 0) {
            alert("Please select at least one Appointment");
            return false;
        }

        if (confirm('Are you sure you want to cancel these ' + selected.length + ' selected appointments ?')) {
            var selected = table.rows('.selected').data();

            var appointments = new Array();

            for (var i = 0; i < selected.length; i++) {

                var appointment = {
                    CustomerId: selected[i]["CustomerId"],
                    PickTicket: selected[i]["PickTicket"],
                    AppointmentNo: selected[i]["AppointmentNo"],
                    PurchaseOrderId: selected[i]["PurchaseOrder"],
                    Posted: false,
                    Status: "D"
                };
                appointments.push(appointment);
            }

            var model = {};
            model.Action = 2;
            model.Appointments = appointments;

            $.ajax({
                type: "POST",
                url: '@Url.Action("ActionAppointments", "OrderAppointment")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(model),
                dataType: "json",
                success: function (result) {
                    alert('Appointment(s) cancelled succesfully');
                    table.rows('.selected').remove().draw(false);
                }

            });

        }

    }



</script>

@Styles.Render("~/Content/datetimepicker")
@*@Styles.Render("~/Content/datatables")*@